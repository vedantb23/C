#include<iostream>
using namespace std;

class Node{
public:
int data;
Node* prev;
Node* next;

//constructor
Node(int d){
    this-> data=d;
    this->prev=NULL; //initiALLY
    this->next=NULL;

}

//destructor 
~Node(){
    int val=this->data;
    if (next!=NULL)
    {   delete next;
        next=NULL;
    }
}
};

void print(Node* head){
    Node *temp=head;

    while (temp!=NULL)
    { cout<< temp-> data <<" ";
       temp=temp-> next;
    }
    cout<<endl;
}

int  getlen(Node* head){
    Node *temp=head;
    int len=0;
    while (temp!=NULL)
    { len++;
       temp=temp-> next;
    }
    return len ;

}

void InsertatHead(Node* &head ,int  d){
    // create new node 
    Node* temp= new Node(d);
   temp->next=head;
   head->prev=temp;
   head=temp; 

} 

void InsertatTail(Node* &tail ,int  d){
    // create new node 
    Node* temp= new Node(d);
   tail->next=temp;
   temp->prev=tail;
   tail=temp;

} 


void insertAtPosition(Node* &tail, Node* &head,int position ,int d){
    //insert at begininng
    if(position==1){
        InsertatHead(head,d);
        return ;
    }
    
    // /to traverse 

    Node* temp= head;
    int cnt=1; 

    while (cnt<position-1)
    {
        temp=temp->next;
        cnt++;

    }

    //insert at last 
    if(temp->next == NULL){
        InsertatTail(tail,d);
        return ;
    } 
    //craeting a node for d;
    Node* nodetoinsert = new Node(d);

    nodetoinsert->next = temp ->next;
    temp->next -> prev=nodetoinsert;
    temp ->next= nodetoinsert;
    nodetoinsert->prev=temp;

}

void deleteNode(int position, Node* & head) { 

    //deleting first or start node
    if(position == 1) {
        Node* temp = head;
        temp->next ->prev=NULL;
        head=temp->next;
        temp->next=NULL;
        delete temp;
    }
    else
    {
        //deleting any middle node or last node
        Node* curr = head;
        Node* prev = NULL;

        int cnt = 1;
        while(cnt < position) {
            prev = curr;
            curr = curr -> next;
            cnt++;
        }

        curr-> prev=NULL;
        prev->next=curr->next;
        curr->next=NULL;
        delete curr;

    }
}





int main(){
    cout<<"**********"<<endl;
    Node* node1= new Node(10);
    Node* head=node1;
    Node* tail=node1;

    print(head) ;
    
    InsertatHead(head,11);
    print(head);

    InsertatTail(tail,25);
    print(head);

    insertAtPosition(tail,head,2,80 );
    print(head) ;

    // cout<<"lenght is "<<getlen(head)<<endl;
        cout<<"NOW  delete"<<endl;
    deleteNode(2,head);
    print(head);
    
    cout<<"**********"<<endl;
    return 0;
}
